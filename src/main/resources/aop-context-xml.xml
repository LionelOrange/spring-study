<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/context
        http://www.springframework.org/schema/context/spring-context.xsd
        http://www.springframework.org/schema/aop
        http://www.springframework.org/schema/aop/spring-aop-4.1.xsd">

    <context:annotation-config/>

    <bean id="xmlAop" class="org.yamikaze.spring.study.aop.xml.XmlAopAspect"/>
    <bean id="xmlHelloWorld" class="org.yamikaze.spring.study.aop.xml.XMlHelloWorldImpl"/>

    <aop:config>
        <aop:aspect id = "xmlAspect" ref="xmlAop">
            <!--
                execution(* org.yamikaze.**.*.*(..))
                第一个星表示任意返回值，第二三个星表示任意包,第四个星表示任意类
                第五个星表示任意方法，两点表示任意参数
            -->
            <!--1、编写要横切的类，这儿beanId为xmlHelloWorld-->
            <!--2、编写横切类的代理 这儿是xmlAop-->
            <!--3、配置pointcut 表示要代理哪些方法 如果配置多个pointcut 用 || 隔开-->
            <!--4、配置横切点 如下面的before after-->
            <aop:pointcut id="sayHelloXml" expression="execution(* org.yamikaze.spring.study.aop.xml.XMlHelloWorldImpl.sayHello())"/>
            <aop:before method="beforeSayHello" pointcut-ref="sayHelloXml"/>
            <aop:after method="afterSayHello" pointcut-ref="sayHelloXml"/>
            <!--可以用属性arg-names设置方法参数-->
            <aop:around method="beforeSayHello" pointcut-ref="sayHelloXml"/>
        </aop:aspect>
    </aop:config>

</beans>